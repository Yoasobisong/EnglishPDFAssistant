name: Build Windows Executable

on:
  release:
    types: [created]
  workflow_dispatch:

env:
  LANG: en_US.UTF-8
  LC_ALL: en_US.UTF-8
  PYTHONUTF8: 1

permissions:
  contents: write  # Repository permissions required

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set Release Tag
      shell: powershell
      run: |
        $DATE = (Get-Date).ToString("yyyy-MM-dd")
        $VERSION = "v1"  # Version number, increment for each release
        $RELEASE_TAG = "$DATE-$VERSION"
        "RELEASE_TAG=$RELEASE_TAG" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Create directories
      shell: cmd
      run: |
        mkdir static
        mkdir src\web\static
        mkdir src\web\templates
        if exist .env.example (
          copy .env.example .env
        ) else (
          echo. > .env.example
        )

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple
        pip install pyinstaller

    - name: Build executable
      shell: cmd
      run: |
        python -m PyInstaller --clean pdf_assistant.spec

        cd dist
        if exist "PDF Reading Assistant" (
          powershell "Compress-Archive -Path 'PDF Reading Assistant\*' -DestinationPath 'EnglishPDFAssistant_Windows.zip' -Force"
        ) else (
          echo Warning: Build directory not found
          dir
        )

    - name: Upload Release
      shell: powershell
      run: |
        if (Test-Path "dist/EnglishPDFAssistant_Windows.zip") {
          gh release create "$env:RELEASE_TAG" `
            dist/EnglishPDFAssistant_Windows.zip `
            --title "PDF Reading Assistant $env:RELEASE_TAG" `
            --notes "Windows Version PDF Reading Assistant $($env:RELEASE_TAG)

            ## This release includes:
            
            - GUI Application: PDF Reading Assistant (GUI).exe
            - Web Application: PDF Reading Assistant (Web).exe
            
            ## Usage Instructions
            
            1. Unzip and run PDF Reading Assistant (GUI).exe or PDF Reading Assistant (Web).exe
            2. Upload PDF file and select processing options
            3. Wait for processing to complete and view results
            
            ## Notes
            
            - First-time users need to configure API keys
            - For detailed instructions, please refer to README.md"
        } else {
          echo "Warning: ZIP file not found"
          dir dist
        }
      env:
        GH_TOKEN: ${{ github.token }}  # Use auto-generated GitHub token 